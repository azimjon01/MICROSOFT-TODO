generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  password  String
  isAdmin   Boolean   @default(false)
  roleId    String?
  role      Role?     @relation(fields: [roleId], references: [id])
  tasks     Task[]
  Project   Project[]
  tags      Tag[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Task {
  id          String    @id @default(cuid())
  title       String
  description String?
  dueDate     DateTime?
  isCompleted Boolean   @default(false)
  priority    Int       @default(0)
  isImportant Boolean   @default(false)
  isPlanned   Boolean   @default(false)
  isMyDay     Boolean   @default(false)
  repeat      String? // daily, weekly va hokazo
  reminder    DateTime?
  deletedAt   DateTime? // Soft delete uchun

  user   User   @relation(fields: [userId], references: [id])
  userId String

  labels   Label[]   @relation("TaskLabels")
  subtasks Subtask[]

  project   Project? @relation(fields: [projectId], references: [id])
  projectId String?

  taskTags TaskTag[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Label {
  id        String   @id @default(cuid())
  name      String
  color     String?
  tasks     Task[]   @relation("TaskLabels")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Subtask {
  id          String   @id @default(cuid())
  title       String
  isCompleted Boolean  @default(false)
  task        Task     @relation(fields: [taskId], references: [id])
  taskId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Project {
  id        String   @id @default(cuid())
  name      String
  color     String   @default("#000000")
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  tasks     Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag {
  id        String    @id @default(cuid())
  name      String
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  taskTags  TaskTag[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model TaskTag {
  taskId String
  tagId  String

  task Task @relation(fields: [taskId], references: [id])
  tag  Tag  @relation(fields: [tagId], references: [id])

  @@id([taskId, tagId])
}

model Role {
  id          String           @id @default(cuid())
  name        String           @unique
  users       User[]
  permissions RolePermission[]
}

model Permission {
  id    String           @id @default(cuid())
  name  String           @unique
  roles RolePermission[]
}

model RolePermission {
  roleId       String
  permissionId String

  role       Role       @relation(fields: [roleId], references: [id])
  permission Permission @relation(fields: [permissionId], references: [id])

  @@id([roleId, permissionId])
}
